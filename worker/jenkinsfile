
pipeline{
    agent none
    
    stages{
        stage("Build"){
                agent{
                  docker{
             image 'maven:3.6.1-jdk-8-slim'
             args '-v $HOME/.m2:/root/.m2'
              }
         }    
    
            when{
                changeset "**/worker/**"
                }
            steps{
                echo 'Building worker..'
                sh 'mvn -f worker/pom.xml compile'
            }
        }
        stage("Test"){
            when{
                changeset "**/worker/**"
                }
                    agent{
        docker{
             image 'maven:3.6.1-jdk-8-slim'
             args '-v $HOME/.m2:/root/.m2'
              }
         }    
    
            steps{
                echo 'Testing worker..'
                sh 'mvn -f worker/pom.xml test'
            }
        }
        stage("Packaging"){
            when{
                changeset "**/worker/**"
                branch 'master'
                }
                    agent{
        docker{
             image 'maven:3.6.1-jdk-8-slim'
             args '-v $HOME/.m2:/root/.m2'
              }
         }    
    
            steps{
                echo 'Packaging Worker'
                sh 'mvn -f worker/pom.xml package -DskipTests'
                archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
            } 
        }
        stage('docker-package'){
           agent any
           when{
               changeset "**/worker/**"
               branch 'master' 
               }
           steps{
               echo 'Packaging worker app with docker'
               script{
                     docker.withRegistry('https://index.docker.io/v1','dockerlogin'){
                     def workerImage = docker.build("ramrajkandasamy/worker:v${env.BUILD_ID}","./worker")
                     workerImage.push()
                     workerImage.push("latest")
                     }
                     }
               }
        }   
        
    }
}
